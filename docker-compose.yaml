services:
  base: &base
    image: sendingtk/chatwoot:v3.12.6
    env_file: .env 
    depends_on:
      - postgres-chat
      - redis
    networks: 
      - evolution-network     

  chatwoot-worker:
    <<: *base
    container_name: chatwoot-worker
    command: bundle exec sidekiq -C config/sidekiq.yml
    depends_on:
      - chatwoot
    environment:
      POSTGRES_DB: chatwoot_production

  chatwoot:
    <<: *base
    container_name: chatwoot
    hostname: chatwoot
    volumes:
      - ./storage:/app/storage  # persist setup flag
    environment:
      NODE_ENV: production
      ENABLE_ACCOUNT_SIGNUP: "true"
    command: >
      sh -c "
        # bundle exec rails db:chatwoot_prepare &&
        rm -f tmp/pids/server.pid &&
        bundle exec rails s -b 0.0.0.0
      "

  n8n:
    image: n8nio/n8n:1.79.3
    container_name: n8n
    restart: always
    env_file: 
      - ./n8n/.env
    networks:
      - evolution-network
    volumes:
      - ./n8n_data:/home/node/.n8n
    environment:
      - GENERIC_TIMEZONE=America/Mexico_City
      - NODE_ENV=production
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD}
      - WEBHOOK_URL=http://n8n.localhost/
      - EXECUTIONS_PROCESS=queue
      - QUEUE_TYPE=redis
      - QUEUE_REDIS_HOST=redis
      - QUEUE_REDIS_PORT=6379
      - QUEUE_REDIS_PASSWORD=${REDIS_PASSWORD}
    user: "1000:1000"   # ðŸ‘ˆ fuerza a usar tu mismo usuario del host

  postgres-chat:
    image: ankane/pgvector
    restart: always
    environment:
      POSTGRES_DB: chatwoot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: chatwoot
    volumes:
      - ./database/chatwoot/postgres:/var/lib/postgresql/data
    networks:
      - evolution-network

  evolution:
    image: atendai/evolution-api:v2.1.1
    container_name: evolution-api
    volumes:
      - ./evolution-api/evolution_instances:/evolution/instances
    networks:
      - evolution-network
    env_file:
      - ./evolution-api/.env
    depends_on:
      - postgres-chat
      - redis


  # ðŸ”¥ Single Redis for all
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    env_file: .env
    command: [
      "redis-server",
      "--appendonly", "yes",
      "--port", "6379",
      "--requirepass", "${REDIS_PASSWORD}"
    ]
    volumes:
      - ./database/redis:/data
    networks:
      - evolution-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: chatwoot-pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: demo@demo.com.br
      PGADMIN_DEFAULT_PASSWORD: PgAdmin2021!
    depends_on:
      - postgres-chat
    networks:
      - evolution-network

  # ðŸš€ Caddy Reverse Proxy
  caddy-chat:
    image: caddy:2.9
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - evolution-network
    depends_on:
      - chatwoot
      - evolution
      - pgadmin


networks:
  evolution-network:
    driver: bridge

volumes:
  caddy_data:
  caddy_config: